import telebot
import time
import json
import os
import config
from telebot import types
from datetime import datetime

try:
    bot = telebot.TeleBot(config.TOKEN)
    user_data = {}
    admin_data = {}
    user_states = {}
    NAME, SURNAME, PHONE, ADDRESS = range(4)
    


    @bot.message_handler(commands=['start'])
    def send_welcome(message):
        try:
            bot.delete_message(message.chat.id, message.message_id)
        except telebot.apihelper.ApiTelegramException as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        old = types.InlineKeyboardMarkup(row_width=1)
        b1 = types.InlineKeyboardButton("–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É", callback_data="forma1")
        x = [types.InlineKeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç—ã", url="https://stet-kazan.ru/contact.html"), types.InlineKeyboardButton("–£—Å–ª—É–≥–∏", url="https://stet-kazan.ru/uslugi.html")]
        old.add(b1).row(*x)
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç!‚úåüèº")
        text = f"–≠—Ç–æ –∫–æ–º–ø–∞–Ω–∏—è <b>–°–¢–≠–¢</b> - –º—ã –ø–æ–º–æ–≥–∞–µ–º –≤–∑—ã—Å–∫–∏–≤–∞—Ç—å –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—é —Å –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–∞ –¥–æ 400 000 —Ä—É–±–ª–µ–π –∑–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ –≤ –∫–≤–∞—Ä—Ç–∏—Ä–∞—Ö. <b>–ó–∞–ø–æ–ª–Ω—è–π —Ñ–æ—Ä–º—É</b> –∏ –º—ã —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ–º—Å—è!"
        with open('img/Untitled.png', 'rb') as photo:
            bot.send_photo(message.chat.id, photo, caption=text, parse_mode="HTML", reply_markup=old)

    @bot.callback_query_handler(func=lambda call: call.data == "start2")
    def send_forma1(call):
        try:
            bot.delete_message(call.message.chat.id, call.message.message_id)
        except telebot.apihelper.ApiTelegramException as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        old = types.InlineKeyboardMarkup(row_width=1)
        b1 = types.InlineKeyboardButton("–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É", callback_data="forma1")
        x = [types.InlineKeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç—ã", url="https://stet-kazan.ru/contact.html"), types.InlineKeyboardButton("–£—Å–ª—É–≥–∏", url="https://stet-kazan.ru/uslugi.html")]
        old.add(b1).row(*x)
        text = "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –∫–æ–º–ø–∞–Ω–∏—è <b>–°–¢–≠–¢</b> - –º—ã –ø–æ–º–æ–≥–∞–µ–º –≤–∑—ã—Å–∫–∏–≤–∞—Ç—å –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—é —Å –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–∞ –¥–æ 400 000 —Ä—É–±–ª–µ–π –∑–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ –≤ –∫–≤–∞—Ä—Ç–∏—Ä–∞—Ö. <b>–ó–∞–ø–æ–ª–Ω—è–π —Ñ–æ—Ä–º—É</b> –∏ –º—ã —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ–º—Å—è!"
        with open('img/Untitled.png', 'rb') as photo:
            bot.send_photo(call.message.chat.id, photo, caption=text, parse_mode="HTML", reply_markup=old)
        

    @bot.callback_query_handler(func=lambda call: call.data == "forma1")
    def send_welcomes(call):
            try:
                bot.delete_message(call.message.chat.id, call.message.message_id)
            except telebot.apihelper.ApiTelegramException as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            keyboard = types.InlineKeyboardMarkup(row_width=1)
            user_id = call.message.chat.id
            user_file = f"users/{user_id}.json"
            if os.path.exists(user_file):
                print(2)
                welcome_message = f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—É –∏ –≤–Ω–µ—Å—Ç–∏ –¥–µ—Ç–∞–ª–∏"
                but1 = types.InlineKeyboardButton("–ù–∞—á–∞—Ç—å –∑–∞–ø–∏—Å—å", callback_data="forma2")
            else:
                print(3)
                welcome_message = f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã"
                but1 = types.InlineKeyboardButton("–ü—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", callback_data="forma")
            user_data[user_id] = {}
            user_states[user_id] = NAME  # Set the initial state to NAME
            but2 = types.InlineKeyboardButton("–û–±—Ä–∞—Ç–Ω–æ", callback_data="start2")
            keyboard.add(but1, but2)
            user_id = call.message.chat.id
            global bot_users
            bot_users = bot.send_message(user_id, parse_mode="HTML", text=welcome_message, reply_markup=keyboard)
            
    @bot.callback_query_handler(func=lambda call: call.data == "forma2")
    def starts_call_data(call):
        user_id = call.message.chat.id
        try:
            bot.delete_message(user_id, call.message.message_id)
        except telebot.apihelper.ApiTelegramException as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        with open(f'users/{user_id}.json', 'r') as file:
            user_data = json.load(file)
            global report_check
            report_check = 0
            user_id = call.message.chat.id
            user_data[user_id] = {}
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            button1 = types.KeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
            keyboard.add(button1)
            bot.send_message(user_id, "<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ, –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É (–ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ, –µ—Å–ª–∏ –µ—Å—Ç—å)</b>", parse_mode="HTML", reply_markup=keyboard)
            bot.register_next_step_handler(call.message, handle_user_response)
            try:
                bot.delete_message(call.message.chat.id, call.message.message_id)
            except telebot.apihelper.ApiTelegramException as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

    def handle_user_response(message):
            print(message.text)
            other_user_id = config.ADMIN
            try:
                bot.delete_message(message.chat.id, message.text)
            except telebot.apihelper.ApiTelegramException as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ!", reply_markup=types.ReplyKeyboardRemove())
            try:
                bot.delete_message(message.chat.id, message.message_id)
            except telebot.apihelper.ApiTelegramException as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            if report_check == 1:
                try:
                    bot.delete_message(message.chat.id, message.message_id)
                except telebot.apihelper.ApiTelegramException as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                return 0
            else:
                user_id = message.chat.id
                response = message.text
                user_data[user_id]['response'] = response
                global admin_data_user_id
                admin_data_user_id = user_id
                keyboard = types.InlineKeyboardMarkup(row_width=1)
                button1 = types.InlineKeyboardButton("–ö–∞–ª–µ–Ω–¥–∞—Ä—å", callback_data="button14")
                button2 = types.InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="start2")
                keyboard.add(button1, button2)
                with open('img/121.png', 'rb') as photo:
                    text3 = "–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –∏ –Ω–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —Å–≤—è–∂—É—Ç—Å—è —Å –Ω–∞–º–∏"
                    bot.send_photo(user_id, photo, caption=text3, parse_mode="HTML", reply_markup=keyboard)


    @bot.callback_query_handler(func=lambda call: call.data == "forma")
    def start_form(call):
        try:
            bot.delete_message(call.message.chat.id, call.message.message_id)
        except telebot.apihelper.ApiTelegramException as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        user_id = call.message.chat.id
        user_file = f"users/{user_id}.json"
        if os.path.exists(user_file):
            bot.send_message(user_id, "–í—ã–±—Ä–∞—Ç—å –≤—Ä–µ–º—è –¥–ª—è –∑–∞–ø–∏—Å–∏")
        else:
            user_data[user_id] = {}
            user_states[user_id] = NAME
            bot.send_message(user_id, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –î–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.\n–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –ò–º—è:")

    @bot.message_handler(func=lambda message: message.chat.type == 'private')
    def handle_form_input(message):
        user_id = message.chat.id
        text = message.text
        current_step = user_states.get(user_id, NAME)
        if current_step == NAME:
            user_data[user_id]["name"] = text
            user_states[user_id] = SURNAME
            bot.send_message(user_id, "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é:")
        elif current_step == SURNAME:
            user_data[user_id]["surname"] = text
            user_states[user_id] = PHONE
            bot.send_message(user_id, "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
        elif current_step == PHONE:
            user_data[user_id]["phone"] = text
            user_states[user_id] = ADDRESS
            bot.send_message(user_id, "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è:\n–ù–∞–ø—Ä–∏–º–µ—Ä - –≥.–ö–∞–∑–∞–Ω—å —É–ª.–ê–º–∏—Ä—Ö–∞–Ω–∞ –¥.1 –∫–≤. 221 ")
        elif current_step == ADDRESS:
            user_data[user_id]["address"] = text
            user_states.pop(user_id, None)
            save_user_data(user_id)

            keyboard = types.InlineKeyboardMarkup(row_width=1)
            but1 = types.InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="forma1")
            keyboard.add(but1)
            bot.send_message(user_id, "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—É!", reply_markup=keyboard)

    def save_user_data(user_id):
        if user_id in user_data:
            with open(f"users/{user_id}.json", "w") as json_file:
                json.dump(user_data[user_id], json_file, ensure_ascii=False, indent=4)
            del user_data[user_id]

    @bot.message_handler(func=lambda message: message.chat.type in ['group', 'supergroup'])
    def check_for_profanity(message):
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        text = message.text.lower()
        text2 = "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –∫–æ–º–ø–∞–Ω–∏—è <b>–°–¢–≠–¢</b> - –º—ã –ø–æ–º–æ–≥–∞–µ–º –≤–∑—ã—Å–∫–∏–≤–∞—Ç—å –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—é —Å –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–∞ –¥–æ 400 000 —Ä—É–±–ª–µ–π –∑–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ –≤ –∫–≤–∞—Ä—Ç–∏—Ä–∞—Ö. <b>–ó–∞–ø–æ–ª–Ω—è–π —Ñ–æ—Ä–º—É</b> –∏ –º—ã —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ–º—Å—è!"
        x = [types.InlineKeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç—ã", url="https://stet-kazan.ru/contact.html"), types.InlineKeyboardButton("–£—Å–ª—É–≥–∏", url="https://stet-kazan.ru/uslugi.html")]
        has_keyword = any(keyword in text for keyword in ["—ç–∫—Å–ø–µ—Ä—Ç–∏–∑—É", "–ø—Ä–æ–≤–µ—Ä–∏—Ç—å", "—ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞", "—Å—Ç–µ–Ω—ã", "–Ω–µ —Ä–æ–≤–Ω—ã–µ —Å—Ç–µ–Ω—ã", "—ç–∫—Å"])
        with open('img/Untitled.png', 'rb') as photo:
            if has_keyword:
                try:
                    but19 = types.InlineKeyboardButton("–ù–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω—è—Ç—å", callback_data="forma1")
                    keyboard.add(but19).row(*x)
                    bot.send_photo(message.from_user.id, photo, caption=text2, parse_mode="HTML", reply_markup=keyboard)
                except telebot.apihelper.ApiTelegramException as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                    key = types.InlineKeyboardMarkup(row_width=1)
                    but1 = types.InlineKeyboardButton("–ù–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω—è—Ç—å", url="http://t.me/build21_bot")
                    key.add(but1).row(*x)
                    bot.send_message(message.chat.id, text2, parse_mode="HTML", reply_markup=key)

    @bot.callback_query_handler(func=lambda call: call.data == "button14") # –ö–Ω–æ–ø–∫–∞ –°–∫—Ä—ã—Ç—å
    def block_user_by_id(call):
        try:
            bot.delete_message(call.message.chat.id, call.message.message_id)
        except telebot.apihelper.ApiTelegramException as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        user_id = call.message.chat.id
        user_data[user_id] = {}
        # keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        # button1 = types.KeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
        # keyboard.add(button1)
        bot.send_message(user_id, "<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ –í—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—É</b>", parse_mode="HTML")
        bot.register_next_step_handler(call.message, sdjgckasdhkldwhcklad)
        try:
            bot.delete_message(call.message.chat.id, call.message.message_id)
        except telebot.apihelper.ApiTelegramException as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

    def sdjgckasdhkldwhcklad(message):
            print(message.text)
            other_user_id = config.ADMIN
            try:
                bot.delete_message(message.chat.id, message.text)
            except telebot.apihelper.ApiTelegramException as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            # bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ!", reply_markup=types.ReplyKeyboardRemove())
            try:
                bot.delete_message(message.chat.id, message.message_id)
            except telebot.apihelper.ApiTelegramException as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            if report_check == 1:
                try:
                    bot.delete_message(message.chat.id, message.message_id)
                except telebot.apihelper.ApiTelegramException as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                return 0
            else:
                user_id = message.chat.id
                response = message.text
                # user_data[user_id]['response'] = response
                with open(f'users/{user_id}.json', 'r') as file:
                    user_data = json.load(file)
                    global admin_data_user_id
                    admin_data_user_id = user_id
                    keyboard = types.InlineKeyboardMarkup(row_width=1)
                    button2 = types.InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="start2")
                    keyboard.add(button2)
                    bot.send_message(user_id, f"–°–ø–∞—Å–∏–±–æ! –ú—ã –≤–∞—Å –∑–∞–ø–∏—Å–∞–ª–∏! {message.text}", reply_markup=keyboard)
                    name =  user_data['name']
                    surname = user_data['surname']
                    phone = user_data['phone']
                    try:
                        bot.send_message(other_user_id, f"üîî–ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!üîî\n–ï—Å—Ç—å –ø–æ—Ç–∞–Ω—Ü–∏–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç! –ï–≥–æ –¥–∞–Ω–Ω—ã–µ: {name}, {surname}, {phone}, –î–∞—Ç–∞: {message.text}")
                    except telebot.apihelper.ApiTelegramException as e:
                        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                    try:
                        bot.delete_message(user_id, message.message_id)
                    except telebot.apihelper.ApiTelegramException as e:
                        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


    @bot.callback_query_handler(func=lambda call: call.data == "block") # –ö–Ω–æ–ø–∫–∞ –°–∫—Ä—ã—Ç—å
    def block_user_by_id(call):
        global report_check
        report_check = 1
        try:
            bot.delete_message(call.message.chat.id, call.message.message_id)
        except telebot.apihelper.ApiTelegramException as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

except telebot.apihelper.ApiTelegramException as e:
    if e.result.status_code == 429:
        print("–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–¥–æ–∂–¥–∏—Ç–µ 5 —Å–µ–∫—É–Ω–¥ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ.")
        time.sleep(15)

if __name__ == "__main__":
    bot.polling()